import maya.cmds as cmds
from maya.common.ui import LayoutManager
import os.path
import json
global path
global objCategory
global seqCategory

#Location data

#Full file path
filepath = cmds.file(q=True, sn=True)
#Full file name
filename = filepath.split('/')[-1]
#Folder name of working file 
filepathname = filepath.split('/')[-2]
#Upperpath of folder name
upperPath = filepath.split('/')[-3]
#WIP sequence file folder
sequencePath = filepath.split('/')[-5]
#wip path
wipPath = filepath.split('/')[-6]
#Working file name without version
objname = filename.split('_')[0]

folderpath = '/'.join(filepath.split('/')[:-1])+'/'
location = filepath.split('/')[-6]

#publish folder path
pubFolderpath = folderpath.split(location)[0]+'publish'+folderpath.split(location)[1]
#WIP folder path
saveFolderpath = folderpath.split(location)[0]+'wip'+folderpath.split(location)[1]
#objects selected in the scene
selected = cmds.ls(sl=True)

global warned
warned = False


#version number 
version = int(filename.split('v')[1].split('.')[0])

def SavePublishTool():
    if cmds.window('SavePublishTool', exists = True):
        cmds.deleteUI('SavePublishTool')
        
    cmds.window('SavePublishTool', widthHeight = (300, 225), sizeable = False, resizeToFitChildren=True)
    with LayoutManager(cmds.columnLayout(adj=True, rowSpacing=10)) as col:

        cmds.columnLayout(adjustableColumn = True)
    
        cmds.separator(h=35)
        cmds.text(label = "Save and Publish Tool", align = "center", font = "boldLabelFont")
        cmds.separator(h=35)

        isWip = fileFormatCheck("wip")
        cmds.text(label = "File Name", align = "center", en = isWip)
        if isWip:cmds.text(filename, align = "center", font = "obliqueLabelFont", en = isWip)
        cmds.button(label = "Save", align = "center", command=checkFileAndSave, en = isWip)
        cmds.separator(h=15)
        
        #isPublish = fileFormatCheck("publish")
        cmds.text(label = "Selected items", en = isWip, align = "center")
        cmds.text(selected, align = "center", font = "obliqueLabelFont", en = isWip)
        cmds.button(label = "Publish", align = "center", command=publish, en = isWip)
        cmds.separator(h=15)
    
        cmds.showWindow('SavePublishTool')

def fileFormatCheck(type):
    global warned
    #get file directory and folder
    filepath = cmds.file(q=True, sn=True)
    fileType = wipPath
    if 'wip' in filepath:
        if fileType == type:
            return True
        else: return False
    elif warned == False:
        warned = True
        cmds.confirmDialog( title='Warning', message="Currently not working in wip directory. Please change to wip.")
        return False
    else: return False

def Savefile():
        msg = ""
        cmds.file(save=True,f=True)
        msg+= "File saved!" + "\n" + objname + " " + "Version" + " " + str(version+1) + " " + "made."
        cmds.confirmDialog( title='Success', message=msg)

def pubAlembicfile():
        msg = ""
        cmds.file(save=True,f=True, typ = 'alembic')
        msg+= ".abc File published!" + "\n" + objname + " " + "Version" + " " + str(version+1) + " " + "made."
        cmds.confirmDialog( title='Success', message=msg)

def pubFBXfile():
        msg = ""
        cmds.file(save=True,f=True, typ = 'mayaFbx')
        msg+= ".FBX File published!" + "\n" + objname + " " + "Version" + " " + str(version+1) + " " + "made."
        cmds.confirmDialog( title='Success', message=msg)


def checkFileAndSave(list):
    #Assets
    #WIP surfacing
    if  "surfacing" in filepathname:
            s = "surface"
            naming = objname + "_" + s + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()

    #WIP models
    if  "model" in filepathname:
            m = "model"
            naming = objname + "_" + m + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()

    #WIP anim
    if  "anim" in filepathname and "spiderBot" in upperPath:
            a = "anim"
            naming = objname + "_" + a + "_" + a + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()
    #WIP rig
    if "rig" in filepathname:
        if "rigImportScene" in filename:
            naming = objname + "_" + "rigImportScene" + "_v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()

            if "_" and "_" and "rig" in filename:
                naming = objname + "_" + filepathname + "_v" + version1(filename, "mayaBinary")
                cmds.file(rename = saveFolderpath + naming)
                Savefile()
        else:
            naming = objname + "_" + filepathname + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()

    # WIP sequence Animation
    if "sequence" in sequencePath and "animation" in filepathname:
            naming = upperPath + "_anim.v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()
    #WIP sequence Layout 
    if "sequence" in sequencePath and "layout" in filepathname:
            naming = upperPath + "_" + filepathname + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()
    #WIP sequence Lighting
    if "sequence" in sequencePath and "light" in filepathname:
            naming = upperPath + "_" + filepathname + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = saveFolderpath + naming)
            Savefile()


def publish(*args):
    if (os.path.exists(pubFolderpath+'source/') == False): 
        os.makedirs(pubFolderpath+'source/')
    if (os.path.exists(pubFolderpath+'cache/') == False): 
            os.makedirs(pubFolderpath+'cache/')
    if (os.path.exists(pubFolderpath+'cache/fbx/') == False): 
            os.makedirs(pubFolderpath+'cache/fbx/')
    if (os.path.exists(pubFolderpath+'cache/alembic/') == False): 
            os.makedirs(pubFolderpath+'cache/alembic/')
    #Assets
    #WIP surfacing
    if  "surfacing" in filepathname:
            s = "surface"
            naming = objname + "_" + s + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()
                #Debugging
            print(pubFolderpath+'source/')  
            print(pubFolderpath+ 'cache/alembic')  
            print(pubFolderpath+ 'cache/fbx') 

    #WIP models
    if  "model" in filepathname:
            m = "model"
            naming = objname + "_" + m + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()

                #Debugging
            print(pubFolderpath+'source/')  
            print(pubFolderpath+ 'cache/alembic')  
            print(pubFolderpath+ 'cache/fbx') 

    #WIP anim
    if  "anim" in filepathname and "spiderBot" in upperPath:
            a = "anim"
            naming = objname + "_" + a + "_" + a + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()
                #Debugging
            print(pubFolderpath+'source/')  
            print(pubFolderpath+ 'cache/alembic')  
            print(pubFolderpath+ 'cache/fbx') 
    #WIP rig
    if "rig" in filepathname:
        if "rigImportScene" in filename:
            naming = objname + "_" + "rigImportScene" + "_v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()
                #Debugging
            print(pubFolderpath+'source/')  
            print(pubFolderpath+ 'cache/alembic')  
            print(pubFolderpath+ 'cache/fbx') 

            if "_" and "_" and "rig" in filename:
                naming = objname + "_" + filepathname + "_v" + version1(filename, "mayaBinary")
                cmds.file(rename = pubFolderpath+ 'source/' + naming)
                Savefile()
                cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
                pubAlembicfile()
                cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
                pubFBXfile()    #Debugging
                print(pubFolderpath+'source/')  
                print(pubFolderpath+ 'cache/alembic')  
                print(pubFolderpath+ 'cache/fbx') 
        else:
            naming = objname + "_" + filepathname + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()    #Debugging
            print(pubFolderpath+'source/')  
            print(pubFolderpath+ 'cache/alembic')  
            print(pubFolderpath+ 'cache/fbx') 

    # WIP sequence Animation
    if "sequence" in sequencePath and "animation" in filepathname:
            naming = upperPath + "_anim.v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()
                #Debugging
            print(pubFolderpath+'source/')  
            print(pubFolderpath+ 'cache/alembic')  
            print(pubFolderpath+ 'cache/fbx') 
    #WIP sequence Layout 
    if "sequence" in sequencePath and "layout" in filepathname:
            naming = upperPath + "_" + filepathname + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()
                #Debugging
            print(pubFolderpath+'source/')  
            print(pubFolderpath+ 'cache/alembic')  
            print(pubFolderpath+ 'cache/fbx') 
            
            
    #WIP sequence Lighting
    if "sequence" in sequencePath and "light" in filepathname:
            naming = upperPath + "_" + filepathname + ".v" + version1(filename, "mayaBinary")
            cmds.file(rename = pubFolderpath+ 'source/' + naming)
            Savefile()
            cmds.file(rename = pubFolderpath+ 'cache/alembic/' + naming)
            pubAlembicfile()
            cmds.file(rename = pubFolderpath+ 'cache/fbx/' + naming)
            pubFBXfile()
    
    #Debugging
    print(pubFolderpath+'source/')  
    print(pubFolderpath+ 'cache/alembic')  
    print(pubFolderpath+ 'cache/fbx') 
    
def version1(obj, type):
    if obj == "": return "001"
    else:
        if (type == 'mayaBinary'): vers = int(filename.split('.v')[1].split('.')[0])
        else: vers = int(obj.split('.')[1].split('v')[1])+1
    if vers < 10: return "00" + str(vers+1)
    elif vers < 100: return "0" + str(vers+1)
    return str(vers)


SavePublishTool()
